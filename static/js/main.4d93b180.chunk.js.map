{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ATMDeposit","onChange","isDeposit","isValid","deposit","console","log","Number","Input","id","value","onClick","inputProps","type","width","min","step","className","disabled","onMouseOver","App","React","useState","setDeposit","totalState","setTotalState","setIsDeposit","atmMode","setAtmMode","validTransaction","setValidTransaction","status","onSubmit","event","newTotal","alert","preventDefault","Select","color","e","target","name","MenuItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d93b180.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport { MenuItem, Select, Input } from '@material-ui/core'; \n\nconst ATMDeposit = ({ onChange, isDeposit, isValid, deposit }) => {\n  const choice = ['Deposit', 'Cash Back'];\n  console.log(`ATM isDeposit: ${isDeposit}`);\n  console.log(deposit);\n  \n  return (\n    <label>\n      <h3> {choice[Number(!isDeposit)]}</h3>\n      <Input\n        id=\"number-input\"\n        value={deposit}\n        onChange={onChange}\n        onClick={onChange}\n        inputProps={{\n          type: \"number\",\n          width: \"200\",\n          min: \"0\",\n          step: \"10\" \n\n        }}></Input>\n      <Input\n        className=\"btn btn-primary\"\n        id=\"submit-input\" \n        value={ isDeposit? 'Deposit': 'Withdraw' }  \n        disabled={!isValid}\n        /* onMouseOver={document.getElementById('number-input').onChange} */\n        onMouseOver = {console.log('posible')}\n        inputProps={{\n          type: \"submit\",\n          width: \"200\"\n        }}></Input>\n    </label>\n  );\n};\n\n\nfunction App() {\n\n  const [deposit, setDeposit] = React.useState(0);\n  const [totalState, setTotalState] = React.useState(0);\n  const [isDeposit, setIsDeposit] = React.useState(true);\n  const [atmMode, setAtmMode] = React.useState('')\n  const [validTransaction, setValidTransaction] = React.useState(false);\n\n\n  let status = `Account Balance $ ${totalState} `;\n  console.log(`Account Rendered with isDeposit: ${isDeposit}`);\n  const handleChange = (event) => {\n    console.log(`handleChange ${event.target.value}`);\n    if (deposit < 0) {\n      setDeposit(0);\n    } else {\n      setDeposit(Number(event.target.value));\n    }\n    setValidTransaction(false)\n    if (event.target.value <= 0) {\n      return\n    }\n    if (atmMode === 'Cash Back' && event.target.value > totalState) {\n      alert(`Your withdraw should be an amount lower than your account balance`)\n      setValidTransaction(false)\n    } else {\n      setValidTransaction(true)\n    }\n  };\n  const handleSubmit = (event) => {\n    let newTotal = isDeposit ? totalState + deposit : totalState - deposit;\n    isDeposit ? alert(`You deposit $${deposit}`) : alert(`You made a withdraw of $${deposit}`)\n    setTotalState(newTotal);\n    setValidTransaction(false);\n    event.preventDefault();\n  };\n  const handleModeSelect = (event) => {\n    setAtmMode(event.target.value)\n    if(event.target.value === \"Deposit\"){\n      setIsDeposit(true)\n    } else if (event.target.value === \"Cash Back\"){\n      setIsDeposit(false)\n    } \n  }\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <h2>ATM Machine</h2>\n        <div className = 'container'>\n        <form onSubmit={handleSubmit}>\n        <h2 id=\"total\">{status}</h2>\n            <Select\n              color= 'primary'\n              onChange={(e) => handleModeSelect(e)}\n              inputProps={{\n                name: \"mode\",\n                id: \"mode-select\"\n              }}>\n          <MenuItem id=\"no-selection\" value=\"\"></MenuItem>\n          <MenuItem id=\"deposit-selection\" value=\"Deposit\">Deposit</MenuItem>\n          <MenuItem id=\"cashback-selection\" value=\"Cash Back\" >Cash Back</MenuItem>\n        </Select>\n        {\n          atmMode !== '' &&\n          <>\n          <ATMDeposit \n            onChange={handleChange}\n            isDeposit={isDeposit}\n            isValid={validTransaction}\n            deposit={deposit}\n            ></ATMDeposit>\n          </>\n        }\n        </form>\n          </div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n  <React.StrictMode>\n  \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}